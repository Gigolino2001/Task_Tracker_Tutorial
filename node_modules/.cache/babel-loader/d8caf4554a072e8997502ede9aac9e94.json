{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(`http://localhost:5000/tasks/`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }; //Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const getTask = await fetchTask(id);\n    const updatedTask = { ...getTask,\n      reminder: !getTask.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 28\n    }, this) : \"No Tasks to Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/react-task-tracker/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","getTask","updatedTask","reminder","map","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() =>{\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n\n//Fetch Tasks\nconst fetchTasks = async() => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n\n  return data\n}\n\nconst fetchTask = async(id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n\n//Add Task\nconst addTask = async(task) => {\n  const res = await fetch(`http://localhost:5000/tasks/`, {method: 'POST', headers:{'Content-type': 'application/json',}, body:JSON.stringify(task),})\n  const data = await res.json()\n  setTasks([...tasks,data])\n}\n\n//Delete Task\nconst deleteTask = async(id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE',})\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = async(id) => {\n  const getTask = await fetchTask(id)\n  const updatedTask = {...getTask,reminder: !getTask.reminder}\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {method: 'PUT', headers:{'Content-type': 'application/json',}, body:JSON.stringify(updatedTask),})\n  const data = await res.json()\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder:data.reminder} : task))\n} \n\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : (\"No Tasks to Show\")}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}