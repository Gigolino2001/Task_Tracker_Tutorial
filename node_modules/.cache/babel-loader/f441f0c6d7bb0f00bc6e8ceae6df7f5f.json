{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showaddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appointment',\n    day: '5 Feb',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting',\n    day: '6 Feb',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Shopping',\n    day: '5 Feb',\n    reminder: false\n  }]); //Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this) : \"No Tasks to Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"46b0DZKs2pHSS6CCEj+jSiyloZI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showaddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAC,oBAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,QAAQ,EAAC;AAJX,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAC,SAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,QAAQ,EAAC;AAJX,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAC,UAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,QAAQ,EAAC;AAJX,GAbiC,CAAD,CAAlC,CAFa,CAuBf;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,IAA+B,CAA1C;AACA,UAAMC,OAAO,GAAI;AAACT,MAAAA,EAAD;AAAK,SAAGK;AAAR,KAAjB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUW,OAAV,CAAD,CAAR;AACD,GAJD,CAxBe,CA8Bf;;;AACA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA/Be,CAmCf;;;AACA,QAAMY,cAAc,GAAIZ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWR,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGK,IAAJ;AAAUF,MAAAA,QAAQ,EAAC,CAACE,IAAI,CAACF;AAAzB,KAAjB,GAAsDE,IAA1E,CAAD,CAAR;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEY,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAApB,GAA+F,kBAHlG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/CQjB,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nfunction App() {\n  const [showaddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text:'Doctor Appointment',\n      day: '5 Feb',\n      reminder:true,\n    },\n    {\n      id:2,\n      text:'Meeting',\n      day: '6 Feb',\n      reminder:true,\n    },\n    {\n      id:3,\n      text:'Shopping',\n      day: '5 Feb',\n      reminder:false,\n    },\n  ])\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random()*1000)+1\n  const newTask =  {id, ...task}\n  setTasks([...tasks,newTask])\n}\n\n//Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder:!task.reminder} : task))\n} \n\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddTask onAdd={addTask}/>\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : (\"No Tasks to Show\")}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}